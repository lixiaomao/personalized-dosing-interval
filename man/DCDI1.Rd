% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DCDI.R
\name{DCDI1}
\alias{DCDI1}
\title{Fits dose interval using DC-algorithm}
\usage{
DCDI1(train, alpha, method = "rq", type = "PDI", pred0 = NULL,
  maxiter = 20, step = 1, trace = 0, lower = TRUE, eps = NULL,
  aL = NULL, aU = NULL, lambda = 1e-07, cost = 1, embed.mtry = 1/2,
  svmKernel = NULL, ...)
}
\arguments{
\item{train}{the training data set.}

\item{alpha}{the guaranteed probability in PDI and the relative loss in EDI. Default is c(0.5,0.5).}

\item{method}{specified methods used for DC and ordinal approaches.}

\item{type}{indicates whether PDI or EDI is to be calculated.}

\item{pred0}{the initial prediction for training data set, if NULL, default initialization is used}

\item{maxiter}{maximal iterations for DC algorithm}

\item{step}{stepsize for DC algorithm}

\item{trace}{the level of detail to be printed: 1,2,3,4}

\item{lower}{True or False, Whether lower boundary is considered when applied to one-sided interval}

\item{nfolds}{the number of folds used in cross-validation.}

\item{two.sided}{indicator of whether two-sided interval is considered.}

\item{family}{specifis the methods. 'continuous' leads to DC-algorithm,'ordinal' handles the ordinal treatments, while 'as.ordinal' cuts continuous treatment into several ordinal levels and apply the ordinal algorithm.}

\item{breaks}{ways 'as.ordinal' cuts continuous treatment into several ordinal levels, default 'quantile'. User can also choose 'uniform' or specify customized breaks}

\item{Eps}{parameter for the relaxation}

\item{Lambda}{penalty for the quantile regression}

\item{Cost}{cost for the support vector machine}

\item{Embed.mtry}{proportion of mtry}
}
\description{
This function is the wrapper of fitting functions for doseInt
}
\examples{
  train1=Scenario1.continuous(1000,5,1)
  test1=Scenario1.continuous(10000,5,1)
  fit1=DCDI1(train1,alpha=c(0.5,0.5),method='rq',trace=3)
  predNew1=predict(fit1,test1)
  cor(predNew1$pred,test1$opt)^2

  train3=Scenario3.continuous(2000,5,3)
  test3=Scenario3.continuous(10000,5,3)
  fit3=DCDI2(train3,alpha=c(0.5,0.5),method='rq',trace=3)
  predNew3=predict(fit3,test3)
  cor(predNew3$pred_L,test3$opt_L)^2
  cor(predNew3$pred_R,test3$opt_R)^2
}
