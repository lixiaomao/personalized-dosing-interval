% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ordinal.R
\name{ordinalDI}
\alias{ordinalDI}
\title{Fits dose interval using ordinal approach}
\usage{
ordinalDI(train, type = "PDI", two.sided = FALSE, cost = 1, K = 10,
  continuous = FALSE, aL = NULL, aU = NULL, global = F, margin = 0,
  alpha = c(0.5, 0.5), breaks = "quantile", lower = TRUE,
  method = "svmLinear", ...)
}
\arguments{
\item{train}{the training data set.}

\item{type}{indicates whether PDI or EDI is to be calculated.}

\item{two.sided}{indicator of whether two-sided interval is considered.}

\item{K}{level of ordinal treatment, default 10}

\item{global}{if global data are used for ordinal approach, default False}

\item{margin}{how large is the margin if global=False, default 0}

\item{alpha}{the guaranteed probability in PDI and the relative loss in EDI. Default is c(0.5,0.5).}

\item{breaks}{ways 'as.ordinal' cuts continuous treatment into several ordinal levels, default 'quantile'. User can also choose 'uniform' or specify customized breaks}

\item{lower}{True or False, Whether lower boundary is considered when applied to one-sided interval}

\item{method}{specified methods used for DC and ordinal approaches.}

\item{test}{the testing data set. If test is NULL, use train as test.}

\item{pred0}{the initial prediction for training data set, if NULL, default initialization is used}

\item{nfolds}{the number of folds used in cross-validation.}

\item{family}{specifis the methods. 'continuous' leads to DC-algorithm,'ordinal' handles the ordinal treatments, while 'as.ordinal' cuts continuous treatment into several ordinal levels and apply the ordinal algorithm.}

\item{trace}{the level of detail to be printed: 1,2,3,4}

\item{Cost}{cost for the support vector machine}
}
\description{
This function is the wrapper of fitting functions for doseInt
}
\examples{
  fit1=ordinalDI(train1,alpha=c(0.5,0.5),K=20,continuous = T)
  predNew1=predict(fit1,test1)
  1-mean((predNew1$value-test1$opt)^2)/var(test1$opt)

  fit3=ordinalDI(train3,two.sided=T,alpha=c(0.5,0.5),K=20,continuous=T)
  predNew3=predict(fit3,test3)
  cor(predNew3$value_L,test3$opt_L)^2
  cor(predNew3$value_R,test3$opt_R)^2

}
